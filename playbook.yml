##################################################
# DO Community Playbooks: Apache on Ubuntu 18.04
##################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]  

    - name: Install Apache
      apt: name=apache2 update_cache=yes state=latest
     
    - name: Adding HTTPS support for passenger
      apt: name=gnupg

    - name: Add an apt key by id from a keyserver
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80 
        id: 561F9B9CAC40B2F7
 
    - name: Disable default Apache site
      shell: apt-get install -y apt-transport-https ca-certificates

    - name: Adding APT repository
      shell: sh -c 'echo deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main > /etc/apt/sources.list.d/passenger.list'  

    - name: Updating Virtual Machine
      apt: update_cache=yes force_apt_get=yes
   
    - name: Install Passenger
      shell: sudo apt-get install -y libapache2-mod-passenger
    
    - name: Update VM
      apt: update_cache=yes force_apt_get=yes 

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "{{ app_user }}"
        mode: '0755'

    - name: Copy index test page
      template:
        src: "files/index.js"
        dest: "/var/www/{{ http_host }}/index.js"    

    - name: Set up Apache virtualhost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
    
    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache
      
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

    - name: "UFW - Allow HTTP on port {{ http_port1 }}"
      ufw:
        rule: allow
        port: "{{ http_port1 }}"
        proto: tcp

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
